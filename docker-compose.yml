services:
  # MongoDB 資料庫服務
  mongodb:
    image: mongo:6.0
    container_name: iue-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 40s
    networks:
      - iue-network

  # MongoDB 網頁管理介面
  mongo-express:
    image: mongo-express:1.0
    container_name: iue-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - mongodb
    networks:
      - iue-network

  # 後端 API 服務
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: iue-server
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - iue-network

  # 前端應用程式
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: iue-client
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - iue-network

  # Nginx 反向代理 (生產環境使用)
  nginx:
    image: nginx:alpine
    container_name: iue-nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
      - client
    networks:
      - iue-network

networks:
  iue-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
